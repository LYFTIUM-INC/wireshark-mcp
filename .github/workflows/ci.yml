name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Type check with mypy
      run: mypy wireshark_mcp || true
    - name: Lint with ruff
      run: ruff check .
    - name: Check formatting with black
      run: black --check .
    - name: Run tests
      run: pytest -q

  integration:
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request' || github.event.pull_request.draft == false
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Install tshark
        run: |
          sudo apt-get update -y
          sudo apt-get install -y tshark wget
      - name: Download sample PCAP
        run: |
          mkdir -p /tmp/pcaps
          wget -O /tmp/pcaps/http.cap https://gitlab.com/wireshark/wireshark/-/raw/master/test/captures/http.cap
      - name: Run integration tests
        env:
          INTEGRATION: '1'
          PCAP_PATH: /tmp/pcaps/http.cap
        run: pytest -q tests/test_integration_tools.py